(function(){var n=angular.module("app",["ngMessages","ngVis"]).constant("config",{defaultGraphUrl:"http://localhost:5001/api/v1/graphs/test1",shortestPathEndpoint:"/shortest-path"}).controller("HomeController",["$scope",function(n){var t=this;t.graph=null;n.$on("graphSelected",function(){t.graph=null});n.$on("graphLoaded",function(n,i){t.graph=i.graph})}]).controller("GraphSelectorController",["$rootScope","config",function(n,t){var i=this;i.graphUrl=t.defaultGraphUrl;i.selectGraph=function(){n.$broadcast("graphSelected",{graphUrl:i.graphUrl})}}]).controller("ErrorController",["$scope",function(n){var t=this;t.error=null;n.$on("error",function(n,i){t.error=i});n.$on("graphSelected",function(){t.error=null})}]).controller("GraphController",["$rootScope","$scope","graphApi","visDataSetHelper",function(n,t,i,r){var u=this;u.graphData={};u.graphOptions={interaction:{hover:!0,multiselect:!0,selectConnectedEdges:!1,navigationButtons:!0}};u.graphEvents={selectNode:function(t){n.$broadcast("nodeSelected",{selectedNodeIds:t.nodes})},deselectNode:function(t){n.$broadcast("nodeUnselected",{selectedNodeIds:t.nodes})}};t.$on("graphSelected",function(n,t){i.getGraph(t.graphUrl).then(u.loadGraph,u.graphError)});u.loadGraph=function(t){var i=t.data,f=r.mapNodes(i.nodes),e=r.mapEdges(i.edges);u.graphData={nodes:f,edges:e};n.$broadcast("graphLoaded",{graph:i})};u.graphError=function(){n.$broadcast("error",{getGraphApiError:!0})};t.$on("pathFound",function(n,t){r.highlightPath(u.graphData,t.pathNodeIds);u.graphData={nodes:u.graphData.nodes,edges:u.graphData.edges}})}]).controller("GraphActionsController",["$rootScope","$scope","graphApi",function(n,t,i){var r=this;r.graphUrl=null;r.selectedNodeIds=[];r.findShortestPath=function(){i.findShortestPath(r.graphUrl,r.selectedNodeIds[0],r.selectedNodeIds[1]).then(r.shortestPathFound,r.shortestPathError)};r.shortestPathFound=function(t){r.selectedNodeIds=[];n.$broadcast("pathFound",{pathNodeIds:t.data})};r.shortestPathError=function(){n.$broadcast("error",{shortestPathApiError:!0})};t.$on("graphSelected",function(n,t){r.graphUrl=t.graphUrl;r.selectedNodeIds=[]});t.$on("nodeSelected",function(n,i){t.$apply(function(){r.selectedNodeIds=i.selectedNodeIds.slice()})});t.$on("nodeUnselected",function(n,i){t.$apply(function(){r.selectedNodeIds=i.selectedNodeIds.slice()})})}]).factory("graphApi",["$http","config",function(n,t){return{getGraph:function(t){return n({url:t,method:"GET"})},findShortestPath:function(i,r,u){return n({url:i.trim("/")+t.shortestPathEndpoint,method:"GET",params:{startNodeId:r,endNodeId:u}})}}}]).factory("visDataSetHelper",[function(){return{mapNodes:function(n){var t=new vis.DataSet;return n.forEach(function(n){t.add([{id:n.id,label:n.label,shape:"circle",color:{border:"#000000",background:"#ffffff",hover:{border:"#000000",background:"#dddddd"}}}])}),t},mapEdges:function(n){var t=new vis.DataSet;return n.forEach(function(n){t.add([{from:n.startNodeId,to:n.endNodeId,color:{color:"#000000",inherit:!1},width:1}])}),t},highlightPath:function(n,t){return n.nodes.forEach(function(n){var i,r;t.indexOf(n.id)!=-1?(i="#32a800",r="#e6ffdb"):(i="#000000",r="#ffffff");n.color.border=i;n.color.background=r}),n.edges.forEach(function(n){var i=t.indexOf(n.from),r=t.indexOf(n.to),u,f;i!=-1&&r!=-1&&(r==i+1||r==i-1)?(u="#32a800",f=2):(u="#000000",f=1);n.color.color=u;n.width=f}),n}}}])})();